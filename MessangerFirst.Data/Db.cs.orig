using System.Data.Entity;
using MessangerFirst.Core.Model;

namespace MessangerFirst.Data
{
    public class Db : DbContext
    {
        public Db()
        {
            Database.CreateIfNotExists();
            //.SetInitializer<Db>(new CreateDatabaseIfNotExists<Db>());
        }

        public DbSet<User> Users;
        public DbSet<Role> Roles;
        public DbSet<Message> Messages;
        public DbSet<History> Histories;

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<History>().ToTable("Histories");

            modelBuilder.Entity<User>().HasMany(r => r.Roles).WithMany(u => u.Users).Map(f =>
            {
                f.MapLeftKey("UserId");
                f.MapRightKey("RoleId");
            });

            modelBuilder.Entity<Message>()
                .HasRequired(m => m.Sender)
                .WithMany(t => t.SentMessages)
                .HasForeignKey(m => m.SenderId)
                .WillCascadeOnDelete(false);

            modelBuilder.Entity<Message>()
                .HasRequired(m => m.Addressee)
                .WithMany(t => t.ReceivedMessages)
                .HasForeignKey(m => m.AddresseeId)
                .WillCascadeOnDelete(false);

            base.OnModelCreating(modelBuilder);
        }
    }
}
